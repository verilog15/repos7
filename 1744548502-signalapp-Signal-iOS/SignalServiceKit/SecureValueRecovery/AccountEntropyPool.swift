//
// Copyright 2025 Signal Messenger, LLC
// SPDX-License-Identifier: AGPL-3.0-only
//

import Foundation
public import LibSignalClient

public struct AccountEntropyPool: Codable {

    public enum Constants {
        public static let byteLength: UInt = 64 /* bytes */
    }

    private let key: String
    public var rawData: String { key }

    public init() {
        self.key = LibSignalClient.AccountEntropyPool.generate()
    }

    public init(key: String) throws {
        guard LibSignalClient.AccountEntropyPool.isValid(key) else {
            throw OWSAssertionError("Invalid entropy pool key")
        }
        self.key = key
    }

    // Derived Keys
    public func getMasterKey() -> MasterKey {
        // Force unwrap here.  At this point, the AEP value should either have been validated by
        // LibSignal on init, or generated by LibSignal, so should correctly generate a MasterKey.
        return try! MasterKey(data: try! LibSignalClient.AccountEntropyPool.deriveSvrKey(key).asData)
    }

    public func getBackupKey() -> BackupKey {
        return try! LibSignalClient.AccountEntropyPool.deriveBackupKey(key)
    }
}
