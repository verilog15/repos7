opam-version: "2.0"
maintainer: "opensource-contacts@janestreet.com"
authors: ["Jane Street Group, LLC <opensource-contacts@janestreet.com>"]
homepage: "https://github.com/janestreet/memtrace_viewer"
bug-reports: "https://github.com/janestreet/memtrace_viewer/issues"
dev-repo: "git+https://github.com/janestreet/memtrace_viewer.git"
doc: "https://ocaml.janestreet.com/ocaml-core/latest/doc/memtrace_viewer/index.html"
license: "MIT"
build: [
  ["dune" "build" "-p" name "-j" jobs]
]
depends: [
  "ocaml"               {>= "4.11.0"}
  "async_js"            {>= "v0.16" & < "v0.17"}
  "async_kernel"        {>= "v0.16" & < "v0.17"}
  "async_rpc_kernel"    {>= "v0.16" & < "v0.17"}
  "bonsai"              {>= "v0.16" & < "v0.17"}
  "core_kernel"         {>= "v0.16" & < "v0.17"}
  "ppx_jane"            {>= "v0.16" & < "v0.17"}
  "async_rpc_websocket" {>= "v0.16" & < "v0.17"}
  "virtual_dom"         {>= "v0.16" & < "v0.17"}
  "dune"                {>= "2.0.0"}
  "js_of_ocaml-ppx"
  "memtrace"
  "ocaml-embed-file"    {>= "v0.16" & < "v0.17"}
]
synopsis: "Interactive memory profiler based on Memtrace"
description: "
Processes traces produced by the Memtrace library and displays the
top allocators in a table or flame graph. To help find space leaks,
events can be filtered by lifetime, showing only allocations of
objects that are still live at peak memory usage.
"
url {
src: "https://ocaml.janestreet.com/ocaml-core/v0.16/files/memtrace_viewer-v0.16.0.tar.gz"
checksum: "sha256=bb50fc48fef748dffe7ff1e151021b1361500c432a8c2991065fd31fd474f817"
}
