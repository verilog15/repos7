# This file is generated by dune, edit dune-project instead
opam-version: "2.0"
synopsis:
  "Conformist allows you to define schemas to decode, validate and sanitize input data declaratively"
description: """

Conformist allows you to define schemas to decode, validate and sanitize input data declaratively.
It comes with runtime types for primitive OCaml types such as `int`, `string`, `bool` and `float` but also `Ptime.t`, `option` and custom types.
Re-use business rules in validators and run it on the client side with js_of_ocaml.
Arbitrary meta data can be stored in schemas which is useful to build functionality on top of conformist.
"""
maintainer: ["josef@oxidizing.io"]
authors: ["Josef Erben"]
license: "MIT"
homepage: "https://github.com/oxidizing/conformist"
doc: "https://oxidizing.github.io/conformist/"
bug-reports: "https://github.com/oxidizing/conformist/issues"
depends: [
  "dune" {>= "2.4"}
  "ocaml" {>= "4.08.0"}
  "ptime" {>= "0.8.5"}
  "alcotest" {>= "1.2.3" & with-test}
  "sexplib" {>= "v0.13.0" & with-test}
]
conflicts: [ "result" {< "1.5"} ]
build: [
  ["dune" "subst"] {dev}
  [
    "dune"
    "build"
    "-p"
    name
    "-j"
    jobs
    "@install"
    "@runtest" {with-test}
    "@doc" {with-doc}
  ]
]
dev-repo: "git+https://github.com/oxidizing/conformist.git"
url {
  src: "https://github.com/oxidizing/conformist/archive/0.8.0.tar.gz"
  checksum: [
    "md5=a428f6d935fdb92aa0a8dfebf1ddbf2e"
    "sha512=e61ba1a6c746b84e2f3df700de68869eba26433de3b6c428f0b97174d0781dac8c5ff107793506f68cf4aff2b947f11e116c5721d5ad75c3677bf98f249ac41e"
  ]
}
