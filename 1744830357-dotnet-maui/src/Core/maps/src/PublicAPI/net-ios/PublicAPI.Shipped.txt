#nullable enable
Microsoft.Maui.Maps.Distance
Microsoft.Maui.Maps.Distance.Distance() -> void
Microsoft.Maui.Maps.Distance.Distance(double meters) -> void
Microsoft.Maui.Maps.Distance.Equals(Microsoft.Maui.Maps.Distance other) -> bool
Microsoft.Maui.Maps.Distance.Kilometers.get -> double
Microsoft.Maui.Maps.Distance.Meters.get -> double
Microsoft.Maui.Maps.Distance.Miles.get -> double
Microsoft.Maui.Maps.GeographyUtils
Microsoft.Maui.Maps.Handlers.IMapElementHandler
Microsoft.Maui.Maps.Handlers.IMapElementHandler.PlatformView.get -> MapKit.MKOverlayRenderer!
Microsoft.Maui.Maps.Handlers.IMapElementHandler.VirtualView.get -> Microsoft.Maui.Maps.IMapElement!
Microsoft.Maui.Maps.Handlers.IMapHandler
Microsoft.Maui.Maps.Handlers.IMapHandler.PlatformView.get -> Microsoft.Maui.Maps.Platform.MauiMKMapView!
Microsoft.Maui.Maps.Handlers.IMapHandler.UpdateMapElement(Microsoft.Maui.Maps.IMapElement! element) -> void
Microsoft.Maui.Maps.Handlers.IMapHandler.VirtualView.get -> Microsoft.Maui.Maps.IMap!
Microsoft.Maui.Maps.Handlers.IMapPinHandler
Microsoft.Maui.Maps.Handlers.IMapPinHandler.PlatformView.get -> MapKit.IMKAnnotation!
Microsoft.Maui.Maps.Handlers.IMapPinHandler.VirtualView.get -> Microsoft.Maui.Maps.IMapPin!
Microsoft.Maui.Maps.Handlers.MapElementHandler
Microsoft.Maui.Maps.Handlers.MapElementHandler.MapElementHandler() -> void
Microsoft.Maui.Maps.Handlers.MapElementHandler.MapElementHandler(Microsoft.Maui.IPropertyMapper? mapper = null) -> void
Microsoft.Maui.Maps.Handlers.MapElementHandlerUpdate
Microsoft.Maui.Maps.Handlers.MapElementHandlerUpdate.Index.get -> int
Microsoft.Maui.Maps.Handlers.MapElementHandlerUpdate.Index.init -> void
Microsoft.Maui.Maps.Handlers.MapElementHandlerUpdate.MapElement.get -> Microsoft.Maui.Maps.IMapElement!
Microsoft.Maui.Maps.Handlers.MapElementHandlerUpdate.MapElement.init -> void
Microsoft.Maui.Maps.Handlers.MapElementHandlerUpdate.MapElementHandlerUpdate(int Index, Microsoft.Maui.Maps.IMapElement! MapElement) -> void
Microsoft.Maui.Maps.Handlers.MapHandler
Microsoft.Maui.Maps.Handlers.MapHandler.MapHandler() -> void
Microsoft.Maui.Maps.Handlers.MapHandler.MapHandler(Microsoft.Maui.IPropertyMapper? mapper = null, Microsoft.Maui.CommandMapper? commandMapper = null) -> void
Microsoft.Maui.Maps.Handlers.MapHandler.UpdateMapElement(Microsoft.Maui.Maps.IMapElement! element) -> void
Microsoft.Maui.Maps.Handlers.MapPinHandler
Microsoft.Maui.Maps.Handlers.MapPinHandler.MapPinHandler() -> void
Microsoft.Maui.Maps.Handlers.MapPinHandler.MapPinHandler(Microsoft.Maui.IPropertyMapper? mapper = null) -> void
Microsoft.Maui.Maps.ICircleMapElement
Microsoft.Maui.Maps.ICircleMapElement.Center.get -> Microsoft.Maui.Devices.Sensors.Location!
Microsoft.Maui.Maps.ICircleMapElement.Radius.get -> Microsoft.Maui.Maps.Distance
Microsoft.Maui.Maps.IFilledMapElement
Microsoft.Maui.Maps.IFilledMapElement.Fill.get -> Microsoft.Maui.Graphics.Paint?
Microsoft.Maui.Maps.IGeoPathMapElement
Microsoft.Maui.Maps.IMap
Microsoft.Maui.Maps.IMap.Clicked(Microsoft.Maui.Devices.Sensors.Location! position) -> void
Microsoft.Maui.Maps.IMap.Elements.get -> System.Collections.Generic.IList<Microsoft.Maui.Maps.IMapElement!>!
Microsoft.Maui.Maps.IMap.IsScrollEnabled.get -> bool
Microsoft.Maui.Maps.IMap.IsShowingUser.get -> bool
Microsoft.Maui.Maps.IMap.IsTrafficEnabled.get -> bool
Microsoft.Maui.Maps.IMap.IsZoomEnabled.get -> bool
Microsoft.Maui.Maps.IMap.MapType.get -> Microsoft.Maui.Maps.MapType
Microsoft.Maui.Maps.IMap.MoveToRegion(Microsoft.Maui.Maps.MapSpan! region) -> void
Microsoft.Maui.Maps.IMap.Pins.get -> System.Collections.Generic.IList<Microsoft.Maui.Maps.IMapPin!>!
Microsoft.Maui.Maps.IMap.VisibleRegion.get -> Microsoft.Maui.Maps.MapSpan?
Microsoft.Maui.Maps.IMap.VisibleRegion.set -> void
Microsoft.Maui.Maps.IMapElement
Microsoft.Maui.Maps.IMapElement.MapElementId.get -> object?
Microsoft.Maui.Maps.IMapElement.MapElementId.set -> void
Microsoft.Maui.Maps.IMapPin
Microsoft.Maui.Maps.IMapPin.Address.get -> string!
Microsoft.Maui.Maps.IMapPin.Label.get -> string!
Microsoft.Maui.Maps.IMapPin.Location.get -> Microsoft.Maui.Devices.Sensors.Location!
Microsoft.Maui.Maps.IMapPin.MarkerId.get -> object?
Microsoft.Maui.Maps.IMapPin.MarkerId.set -> void
Microsoft.Maui.Maps.IMapPin.SendInfoWindowClick() -> bool
Microsoft.Maui.Maps.IMapPin.SendMarkerClick() -> bool
Microsoft.Maui.Maps.MapSpan
Microsoft.Maui.Maps.MapSpan.Center.get -> Microsoft.Maui.Devices.Sensors.Location!
Microsoft.Maui.Maps.MapSpan.ClampLatitude(double north, double south) -> Microsoft.Maui.Maps.MapSpan!
Microsoft.Maui.Maps.MapSpan.LatitudeDegrees.get -> double
Microsoft.Maui.Maps.MapSpan.LongitudeDegrees.get -> double
Microsoft.Maui.Maps.MapSpan.MapSpan(Microsoft.Maui.Devices.Sensors.Location! center, double latitudeDegrees, double longitudeDegrees) -> void
Microsoft.Maui.Maps.MapSpan.Radius.get -> Microsoft.Maui.Maps.Distance
Microsoft.Maui.Maps.MapSpan.WithZoom(double zoomFactor) -> Microsoft.Maui.Maps.MapSpan!
Microsoft.Maui.Maps.MapType
Microsoft.Maui.Maps.MapType.Hybrid = 2 -> Microsoft.Maui.Maps.MapType
Microsoft.Maui.Maps.MapType.Satellite = 1 -> Microsoft.Maui.Maps.MapType
Microsoft.Maui.Maps.MapType.Street = 0 -> Microsoft.Maui.Maps.MapType
Microsoft.Maui.Maps.Platform.MauiMKMapView
Microsoft.Maui.Maps.Platform.MauiMKMapView.MauiMKMapView(Microsoft.Maui.Maps.Handlers.IMapHandler! handler) -> void
override Microsoft.Maui.Maps.Distance.Equals(object? obj) -> bool
override Microsoft.Maui.Maps.Distance.GetHashCode() -> int
override Microsoft.Maui.Maps.Handlers.MapElementHandler.CreatePlatformElement() -> MapKit.MKOverlayRenderer!
override Microsoft.Maui.Maps.Handlers.MapHandler.ConnectHandler(Microsoft.Maui.Maps.Platform.MauiMKMapView! platformView) -> void
override Microsoft.Maui.Maps.Handlers.MapHandler.CreatePlatformView() -> Microsoft.Maui.Maps.Platform.MauiMKMapView!
override Microsoft.Maui.Maps.Handlers.MapHandler.DisconnectHandler(Microsoft.Maui.Maps.Platform.MauiMKMapView! platformView) -> void
override Microsoft.Maui.Maps.Handlers.MapPinHandler.CreatePlatformElement() -> MapKit.IMKAnnotation!
override Microsoft.Maui.Maps.MapSpan.Equals(object? obj) -> bool
override Microsoft.Maui.Maps.MapSpan.GetHashCode() -> int
override Microsoft.Maui.Maps.MapSpan.ToString() -> string!
override Microsoft.Maui.Maps.Platform.MauiMKMapView.MovedToWindow() -> void
static Microsoft.Maui.Maps.Distance.BetweenPositions(Microsoft.Maui.Devices.Sensors.Location! position1, Microsoft.Maui.Devices.Sensors.Location! position2) -> Microsoft.Maui.Maps.Distance
static Microsoft.Maui.Maps.Distance.FromKilometers(double kilometers) -> Microsoft.Maui.Maps.Distance
static Microsoft.Maui.Maps.Distance.FromMeters(double meters) -> Microsoft.Maui.Maps.Distance
static Microsoft.Maui.Maps.Distance.FromMiles(double miles) -> Microsoft.Maui.Maps.Distance
static Microsoft.Maui.Maps.Distance.operator !=(Microsoft.Maui.Maps.Distance left, Microsoft.Maui.Maps.Distance right) -> bool
static Microsoft.Maui.Maps.Distance.operator ==(Microsoft.Maui.Maps.Distance left, Microsoft.Maui.Maps.Distance right) -> bool
static Microsoft.Maui.Maps.GeographyUtils.ToCircumferencePositions(this Microsoft.Maui.Maps.ICircleMapElement! circle) -> System.Collections.Generic.List<Microsoft.Maui.Devices.Sensors.Location!>!
static Microsoft.Maui.Maps.GeographyUtils.ToDegrees(this double radians) -> double
static Microsoft.Maui.Maps.GeographyUtils.ToRadians(this double degrees) -> double
static Microsoft.Maui.Maps.Handlers.MapElementHandler.MapFill(Microsoft.Maui.Maps.Handlers.IMapElementHandler! handler, Microsoft.Maui.Maps.IMapElement! mapElement) -> void
static Microsoft.Maui.Maps.Handlers.MapElementHandler.Mapper -> Microsoft.Maui.IPropertyMapper<Microsoft.Maui.Maps.IMapElement!, Microsoft.Maui.Maps.Handlers.IMapElementHandler!>!
static Microsoft.Maui.Maps.Handlers.MapElementHandler.MapStroke(Microsoft.Maui.Maps.Handlers.IMapElementHandler! handler, Microsoft.Maui.Maps.IMapElement! mapElement) -> void
static Microsoft.Maui.Maps.Handlers.MapElementHandler.MapStrokeThickness(Microsoft.Maui.Maps.Handlers.IMapElementHandler! handler, Microsoft.Maui.Maps.IMapElement! mapElement) -> void
static Microsoft.Maui.Maps.Handlers.MapHandler.CommandMapper -> Microsoft.Maui.CommandMapper<Microsoft.Maui.Maps.IMap!, Microsoft.Maui.Maps.Handlers.IMapHandler!>!
static Microsoft.Maui.Maps.Handlers.MapHandler.MapElements(Microsoft.Maui.Maps.Handlers.IMapHandler! handler, Microsoft.Maui.Maps.IMap! map) -> void
static Microsoft.Maui.Maps.Handlers.MapHandler.MapIsScrollEnabled(Microsoft.Maui.Maps.Handlers.IMapHandler! handler, Microsoft.Maui.Maps.IMap! map) -> void
static Microsoft.Maui.Maps.Handlers.MapHandler.MapIsShowingUser(Microsoft.Maui.Maps.Handlers.IMapHandler! handler, Microsoft.Maui.Maps.IMap! map) -> void
static Microsoft.Maui.Maps.Handlers.MapHandler.MapIsTrafficEnabled(Microsoft.Maui.Maps.Handlers.IMapHandler! handler, Microsoft.Maui.Maps.IMap! map) -> void
static Microsoft.Maui.Maps.Handlers.MapHandler.MapIsZoomEnabled(Microsoft.Maui.Maps.Handlers.IMapHandler! handler, Microsoft.Maui.Maps.IMap! map) -> void
static Microsoft.Maui.Maps.Handlers.MapHandler.MapMapType(Microsoft.Maui.Maps.Handlers.IMapHandler! handler, Microsoft.Maui.Maps.IMap! map) -> void
static Microsoft.Maui.Maps.Handlers.MapHandler.MapMoveToRegion(Microsoft.Maui.Maps.Handlers.IMapHandler! handler, Microsoft.Maui.Maps.IMap! map, object? arg) -> void
static Microsoft.Maui.Maps.Handlers.MapHandler.Mapper -> Microsoft.Maui.IPropertyMapper<Microsoft.Maui.Maps.IMap!, Microsoft.Maui.Maps.Handlers.IMapHandler!>!
static Microsoft.Maui.Maps.Handlers.MapHandler.MapPins(Microsoft.Maui.Maps.Handlers.IMapHandler! handler, Microsoft.Maui.Maps.IMap! map) -> void
static Microsoft.Maui.Maps.Handlers.MapHandler.MapUpdateMapElement(Microsoft.Maui.Maps.Handlers.IMapHandler! handler, Microsoft.Maui.Maps.IMap! map, object? arg) -> void
static Microsoft.Maui.Maps.Handlers.MapPinHandler.MapAddress(Microsoft.Maui.Maps.Handlers.IMapPinHandler! handler, Microsoft.Maui.Maps.IMapPin! mapPin) -> void
static Microsoft.Maui.Maps.Handlers.MapPinHandler.MapLabel(Microsoft.Maui.Maps.Handlers.IMapPinHandler! handler, Microsoft.Maui.Maps.IMapPin! mapPin) -> void
static Microsoft.Maui.Maps.Handlers.MapPinHandler.MapLocation(Microsoft.Maui.Maps.Handlers.IMapPinHandler! handler, Microsoft.Maui.Maps.IMapPin! mapPin) -> void
static Microsoft.Maui.Maps.Handlers.MapPinHandler.Mapper -> Microsoft.Maui.IPropertyMapper<Microsoft.Maui.Maps.IMapPin!, Microsoft.Maui.Maps.Handlers.IMapPinHandler!>!
static Microsoft.Maui.Maps.MapSpan.FromCenterAndRadius(Microsoft.Maui.Devices.Sensors.Location! center, Microsoft.Maui.Maps.Distance radius) -> Microsoft.Maui.Maps.MapSpan!
static Microsoft.Maui.Maps.MapSpan.operator !=(Microsoft.Maui.Maps.MapSpan? left, Microsoft.Maui.Maps.MapSpan? right) -> bool
static Microsoft.Maui.Maps.MapSpan.operator ==(Microsoft.Maui.Maps.MapSpan? left, Microsoft.Maui.Maps.MapSpan? right) -> bool
virtual Microsoft.Maui.Maps.Platform.MauiMKMapView.GetViewForOverlayDelegate(MapKit.MKMapView! mapview, MapKit.IMKOverlay! overlay) -> MapKit.MKOverlayRenderer!
